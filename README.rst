LOPoCS, a Light Opensource PointCloud Server
############################################

LOPoCS is a point cloud server written in
Python, allowing to load Point Cloud from a PostgreSQL database thanks to the ``pgpointcloud``
extension.

.. image:: docs/lopocs.png
    :align: center
    :width: 400

.. image:: docs/itowns_montreal1_header.png
    :width: 700

|unix_build| |license|

The current version of LOPoCS provides a way to load Point Cloud from PostgreSQL to the following viewers:

* `Potree viewer <http://www.potree.org/>`_ : viewer with LAZ compressed data.
* `iTowns2 <https://github.com/iTowns/itowns2>`_ : on the side of other data type
* `Cesium <https://github.com/AnalyticalGraphicsInc/cesium>`_ thanks to the `3DTiles <https://github.com/AnalyticalGraphicsInc/3d-tiles>`_ format

Note that LOPoCS is currently the only **3DTiles** server able to stream data from
`pgpointcloud <https://github.com/pgpointcloud/pointcloud>`_. This
is possible thanks to the python module
`py3dtiles <https://github.com/Oslandia/py3dtiles>`_.

Developments are still going on to improve state-of-the-art algorithms and
performances.

`Video <https://vimeo.com/189285883>`_
`Online demonstration <https://li3ds.github.io/lopocs>`_)

.. contents::

.. section-numbering::


Main features
=============

* Command line tool to load data into PostgreSQL
* Stream patches stored in PostgreSQL
* Greyhound protocol support
* 3DTiles standard support (partial)
* Produce ready to use examples with Potree, Cesium and itowns2

Installation
============

Required
--------

  - python >= 3.4
  - gdal development headers (libgdal-dev)
  - pip (python3-pip)
  - virtualenv (python3-virtualenv)

from sources
------------

::

  $ pip https://github.com/Oslandia/lopocs
  $ cd lopocs
  $ virtualenv -p /usr/bin/python3 venv
  $ source venv/bin/activate
  (venv)$ pip install -e .

If you want to use lopocs loader, you must have PDAL installed with extra features.
These features are currently maintained in `this fork <https://github.com/pblottiere/PDAL>`_,
but the goal is to contribute most of them in the official PDAL repository.

Dependencies
------------

- `pgpointcloud <https://github.com/LI3DS/pointcloud>`_
- `PDAL <https://github.com/pblottiere/PDAL/>`_

Moreover, the `Morton Postgres extension <https://github.com/Oslandia/pgmorton>`_
is necessary.

Usage
=====

Prepare your database to welcome point clouds data

::

  $ createdb pc_airport
  $ psql pc_airport
  pc_airport=# create extension postgis;
  CREATE EXTENSION
  pc_airport=# create extension pointcloud;
  CREATE EXTENSION
  pc_airport=# create extension pointcloud_postgis;
  CREATE EXTENSION
  pc_airport=# create extension morton;
  CREATE EXTENSION
  ```

Fill the database with lopocs command line
------------------------------------------



Test lopocs with docker
=======================

If you are a little bit lazy or you don't want to compile the world right now,
you can test lopocs with a one line command. You will need ansible for that and docker
(respectively an IT provisioner and the well known container engine)

::

  $ ./docker.sh


If you want to run unit tests:

```
(venv)$ pip install nose
(venv)$ nosetests
...
```

## Full examples

Some examples with **las** and **e57** files are available in *examples*
directory.

### Saint Sulpice

An example with St Sulpice point cloud (e57 format) coming from [here](http://www.libe57.org/data.html):


To test if LOPoCS is well online:

```
$ curl http://localhost:5000/infos/online
"Congratulation, LOPoCS is online!!!"
```

Then you can use Potree viewer to stream points from the database with your
favorite web browser tanks to the *potree.html* file generated by
**lopocs_builder**:

```
$ chromium outdir/potree.html
```

<br>
<p align="center">
<img align="center" src="https://github.com/LI3DS/lopocs/blob/dev/docs/stsulpice.png" width="700">
</p>
<br>


.. |unix_build| image:: https://img.shields.io/travis/Oslandia/lopocs/master.svg?style=flat-square&label=unix%20build
    :target: http://travis-ci.org/Oslandia/lopocs
    :alt: Build status of the master branch

.. |license| image:: https://img.shields.io/badge/license-LGPL-blue.svg?style=flat-square
    :target: LICENSE
    :alt: Package license
